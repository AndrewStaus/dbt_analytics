{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.8", "generated_at": "2025-06-26T15:11:39.274285Z", "invocation_id": "63aba986-cd0d-4508-918e-ea5999cc818d", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.010285Z", "completed_at": "2025-06-26T15:11:37.052284Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.054287Z", "completed_at": "2025-06-26T15:11:37.054287Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.055001258850097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.analytics.backfill", "compiled": true, "compiled_code": "with hits as (\r\n    select *\r\n    from (\r\n       values \r\n        ('2024-01-01 00:00:00', 11111, 'summer_sale'), \r\n        ('2024-01-01 00:02:00', 11111, null),\r\n        ('2024-01-01 00:03:00', 11111, 'winter_sale'),\r\n        ('2024-01-01 00:04:00', 11111, 'spring_sale'),\r\n        ('2024-01-01 00:00:00', 22222, 'summer_sale'),\r\n        ('2024-01-01 00:02:00', 22222, null),\r\n        ('2024-01-01 00:03:00', 22222, null),\r\n        ('2024-01-01 00:04:00', 22222, 'spring_sale'),\r\n        ('2024-01-01 00:05:00', 22222, null),\r\n        ('2024-01-01 00:00:00', 33333, null),\r\n        ('2024-01-01 00:02:00', 33333, null),\r\n        ('2024-01-01 00:03:00', 33333, null),\r\n        ('2024-01-01 00:04:00', 33333, 'spring_sale')\r\n    ) as t (date_time, entity_id, campaign)\r\n),\r\n\r\nx as (\r\n    select\r\n        *,\r\n        nvl(campaign,\r\n            first_value(campaign) ignore nulls over (\r\n                partition by entity_id\r\n                order by date_time\r\n            )\r\n        ) campaign2,\r\n        case when campaign is null\r\n            then null\r\n            else date_time\r\n        end date_time2\r\n    from hits\r\n)\r\n\r\nselect distinct\r\n    entity_id,\r\n    campaign2 campaign,\r\n    nvl(date_time2,\r\n        first_value(date_time2) ignore nulls over (\r\n            partition by entity_id\r\n            order by date_time\r\n        )\r\n    ) start_time,\r\nfrom x\r\nwhere campaign2 is not null\r\norder by entity_id, start_time", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.157285Z", "completed_at": "2025-06-26T15:11:37.162284Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.169285Z", "completed_at": "2025-06-26T15:11:37.169285Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.026995420455932617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.analytics.accounts_db_accounts", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.164285Z", "completed_at": "2025-06-26T15:11:37.168285Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.175285Z", "completed_at": "2025-06-26T15:11:37.175285Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0299990177154541, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.analytics.adobe_experience_app_clickstream_hits", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.171283Z", "completed_at": "2025-06-26T15:11:37.174285Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.178285Z", "completed_at": "2025-06-26T15:11:37.178285Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030002117156982422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.analytics.adobe_experience_web_clickstream_hits", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.190284Z", "completed_at": "2025-06-26T15:11:37.194285Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.201286Z", "completed_at": "2025-06-26T15:11:37.201286Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019000530242919922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.analytics.csparc_transactions", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.196285Z", "completed_at": "2025-06-26T15:11:37.199284Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.210284Z", "completed_at": "2025-06-26T15:11:37.210284Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026000261306762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.analytics.facebook_ads_campaigns", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.202284Z", "completed_at": "2025-06-26T15:11:37.209283Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.217283Z", "completed_at": "2025-06-26T15:11:37.217283Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029994964599609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.analytics.google_ads_campaigns", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.212283Z", "completed_at": "2025-06-26T15:11:37.215284Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.220284Z", "completed_at": "2025-06-26T15:11:37.220284Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030997514724731445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.analytics.reltio_individual_email", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.229285Z", "completed_at": "2025-06-26T15:11:37.232285Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.241284Z", "completed_at": "2025-06-26T15:11:37.241284Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020000219345092773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.analytics.reltio_individual_party_keys", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.234285Z", "completed_at": "2025-06-26T15:11:37.237285Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.270284Z", "completed_at": "2025-06-26T15:11:37.270284Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04700207710266113, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.analytics.rms_products", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.244287Z", "completed_at": "2025-06-26T15:11:37.350285Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.353287Z", "completed_at": "2025-06-26T15:11:37.353287Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12700223922729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_accounts_db__accounts", "compiled": true, "compiled_code": "with  __dbt__cte__src_accounts_db_accounts as (\n\n\nwith accounts as (\n    select * from analytics.external.accounts_db_accounts\n)\n\nselect\n    id         ::STRING    account_id,\n    party_key  ::STRING    party_key,\n    first_name ::STRING    first_name,\n    last_name  ::STRING    last_name,\n    loaded_at  ::TIMESTAMP loaded_at\nfrom accounts\n), accounts as (\n    select * from __dbt__cte__src_accounts_db_accounts\n)\n\nselect\n    account_id,\n    party_key individual_party_key,\n    (sha2(lower(trim(first_name :: string)), 256)) first_name,\n    (sha2(lower(trim(last_name :: string)), 256)) last_name,\n    loaded_at\nfrom accounts\n\nwhere loaded_at >= (select max(loaded_at) from analytics.accounts_db.accounts )\nqualify row_number() over (partition by account_id order by loaded_at desc) = 1", "relation_name": "analytics.accounts_db.accounts", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.276286Z", "completed_at": "2025-06-26T15:11:37.355288Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.357286Z", "completed_at": "2025-06-26T15:11:37.357286Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.1289994716644287, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_accounts_db__accounts_pii", "compiled": true, "compiled_code": "with  __dbt__cte__src_accounts_db_accounts as (\n\n\nwith accounts as (\n    select * from analytics.external.accounts_db_accounts\n)\n\nselect\n    id         ::STRING    account_id,\n    party_key  ::STRING    party_key,\n    first_name ::STRING    first_name,\n    last_name  ::STRING    last_name,\n    loaded_at  ::TIMESTAMP loaded_at\nfrom accounts\n), accounts as (\n    select * from __dbt__cte__src_accounts_db_accounts\n)\n\nselect\n    account_id,\n    lower(trim(first_name :: string)) first_name,\n    lower(trim(last_name :: string)) last_name,\n    loaded_at\nfrom accounts\n\nwhere loaded_at >= (select max(loaded_at) from analytics.accounts_db.accounts_pii )\nqualify row_number() over (partition by account_id order by loaded_at desc) = 1", "relation_name": "analytics.accounts_db.accounts_pii", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.305283Z", "completed_at": "2025-06-26T15:11:37.359285Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.363287Z", "completed_at": "2025-06-26T15:11:37.363287Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.06400156021118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_csparc__transactions", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__src_csparc_transactions as (\n\n\nwith orders as (\n    select * from analytics.external.csparc_transactions\n)\n\nselect\n    channel      ::STRING        channel,\n    date_time    ::TIMESTAMP     date_time,\n    party_key    ::STRING        party_key,\n    order_id     ::INT           order_id,\n    product_id   ::STRING        product_id,\n    revenue/100  ::DECIMAL(12,2) revenue,\n    margin/100   ::DECIMAL(12,2) margin,\n    loaded_at    ::TIMESTAMP     loaded_at\nfrom orders\n), orders as (\n    select * from __dbt__cte__src_csparc_transactions\n)\n\nselect\n    (convert_timezone('America/Vancouver', 'UTC', date_time)) transacted_at,\n    channel                       sales_channel,\n    party_key                     individual_party_key,\n    order_id                      transaction_id,\n    product_id                    product_id,\n    revenue                       revenue,\n    margin                        margin,\n    loaded_at                     loaded_at\nfrom orders\n\nwhere loaded_at >= (select max(loaded_at) from analytics.csparc.transactions)\nqualify row_number() over (partition by transaction_id order by loaded_at desc) = 1", "relation_name": "analytics.csparc.transactions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.328284Z", "completed_at": "2025-06-26T15:11:37.365285Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.389284Z", "completed_at": "2025-06-26T15:11:37.389284Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.08799505233764648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_facebook_ads__campaigns", "compiled": true, "compiled_code": "\n\nwith\n __dbt__cte__src_facebook_ads_campaigns as (\n\n\nwith campaigns as (\n    select * from analytics.external.facebook_ads_campaigns\n)\n\nselect\n    'facebook_ads'                             ::STRING    marketing_channel,\n    JSON_EXTRACT_PATH_TEXT(DATA, 'id')         ::INT       id,\n    JSON_EXTRACT_PATH_TEXT(DATA, 'name')       ::STRING    name,\n    JSON_EXTRACT_PATH_TEXT(DATA, 'start_date') ::TIMESTAMP start_date,\n    loaded_at                                  ::TIMESTAMP loaded_at\nfrom campaigns\n), campaigns as (\n    select * from __dbt__cte__src_facebook_ads_campaigns\n),\ncampaigns_conformed as (\n    select\n        marketing_channel marketing_channel,\n        id                campaign_id,\n        name              campaign_name,\n        start_date        campaign_start_at,\n        loaded_at         loaded_at\n    from campaigns\n)\n\nselect\n    (sha2(concat_ws(':', nvl(campaign_id:: string, ''), nvl(marketing_channel:: string, '')),256)) campaign_sid,\n    *\nfrom campaigns_conformed\nwhere loaded_at >= (select max(loaded_at) from analytics.facebook_ads.campaigns)\nqualify row_number() over (partition by campaign_id order by loaded_at desc) = 1", "relation_name": "analytics.facebook_ads.campaigns", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.368284Z", "completed_at": "2025-06-26T15:11:37.435284Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.452283Z", "completed_at": "2025-06-26T15:11:37.452283Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09199833869934082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_reltio__individual_email", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__src_reltio_individual_email as (\n\n\nwith individual_party_key as (\n    select * from analytics.external.reltio_individual_email\n)\n\nselect\n    party_key ::STRING    party_key,\n    source    ::STRING    source,\n    email     ::STRING    email,\n    loaded_at ::TIMESTAMP loaded_at\nfrom individual_party_key\n), individual_party_key as (\n    select * from __dbt__cte__src_reltio_individual_email\n)\n\nselect\n    party_key individual_party_key,\n    source,\n    (sha2(lower(trim(email :: string)), 256)) email,\n    loaded_at\nfrom individual_party_key\nwhere loaded_at >= (select max(loaded_at) from analytics.reltio.individual_email)\nqualify row_number() over (partition by party_key, email order by loaded_at desc) = 1", "relation_name": "analytics.reltio.individual_email", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.394283Z", "completed_at": "2025-06-26T15:11:37.436286Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.453285Z", "completed_at": "2025-06-26T15:11:37.453285Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.08699917793273926, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_reltio__individual_email_pii", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__src_reltio_individual_email as (\n\n\nwith individual_party_key as (\n    select * from analytics.external.reltio_individual_email\n)\n\nselect\n    party_key ::STRING    party_key,\n    source    ::STRING    source,\n    email     ::STRING    email,\n    loaded_at ::TIMESTAMP loaded_at\nfrom individual_party_key\n), individual_party_key as (\n    select * from __dbt__cte__src_reltio_individual_email\n)\n\nselect\n    party_key individual_party_key,\n    lower(trim(email :: string)) email,\n    loaded_at\nfrom individual_party_key\nwhere loaded_at >= (select max(loaded_at) from analytics.reltio.individual_email_pii)\nqualify row_number() over (partition by party_key, email order by loaded_at desc) = 1", "relation_name": "analytics.reltio.individual_email_pii", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.412285Z", "completed_at": "2025-06-26T15:11:37.477285Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.522284Z", "completed_at": "2025-06-26T15:11:37.522284Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.13199639320373535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_google_ads__campaigns", "compiled": true, "compiled_code": "with\n __dbt__cte__src_google_ads_campaigns as (\n\n\nwith campaigns as (\n    select * from analytics.external.google_ads_campaigns\n)\n\nselect\n    'google_ads'                          ::STRING    marketing_channel,\n    JSON_EXTRACT_PATH_TEXT(DATA, 'id')    ::INT       id,\n    JSON_EXTRACT_PATH_TEXT(DATA, 'name')  ::STRING    name,\n    JSON_EXTRACT_PATH_TEXT(DATA, 'start') ::TIMESTAMP campaign_start_at,\n    loaded_at                             ::TIMESTAMP loaded_at\nfrom campaigns\n), campaigns as (\n    select * from __dbt__cte__src_google_ads_campaigns\n),\ncampaigns_conformed as (\n    select\n        marketing_channel marketing_channel,\n        id                campaign_id,\n        name              campaign_name,\n        campaign_start_at campaign_start_at,\n        loaded_at         loaded_at\n    from campaigns\n)\n\nselect\n    (sha2(concat_ws(':', nvl(campaign_id:: string, ''), nvl(marketing_channel:: string, '')),256)) campaign_sid,\n    *\nfrom campaigns_conformed\nwhere loaded_at >= (select max(loaded_at) from analytics.google_ads.campaigns)\nqualify row_number() over (partition by campaign_id order by loaded_at desc) = 1", "relation_name": "analytics.google_ads.campaigns", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.437284Z", "completed_at": "2025-06-26T15:11:37.510284Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.524285Z", "completed_at": "2025-06-26T15:11:37.524285Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.11299777030944824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_reltio__individual_party_keys", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__src_reltio_individual_party_keys as (\n\n\nwith individual_party_key as (\n    select * from analytics.external.reltio_individual_party_keys\n)\n\nselect\n    party_key ::STRING    party_key,\n    entity_id ::STRING    entity_id,\n    loaded_at ::TIMESTAMP loaded_at\nfrom individual_party_key\n), individual_party_key as (\n    select * from __dbt__cte__src_reltio_individual_party_keys\n)\n\nselect\n    party_key individual_party_key,\n    entity_id individual_entity_id,\n    loaded_at loaded_at\nfrom individual_party_key\nwhere loaded_at >= (select max(loaded_at) from analytics.reltio.individual_party_keys)\nqualify row_number() over (partition by party_key order by loaded_at desc) = 1", "relation_name": "analytics.reltio.individual_party_keys", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.461284Z", "completed_at": "2025-06-26T15:11:37.528289Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.530285Z", "completed_at": "2025-06-26T15:11:37.530285Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.07300162315368652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_rms__products", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__src_rms_products as (\n\n\nwith individual_party_key as (\n    select * from analytics.external.rms_products\n)\n\nselect\n    id        ::string    id,\n    name      ::string    name,\n    brand     ::string    brand,\n    loaded_at ::timestamp loaded_at\nfrom individual_party_key\n), products as (\n    select * from __dbt__cte__src_rms_products\n)\n\nselect\n    id        product_id,\n    name      product_name,\n    brand     brand_name,\n    loaded_at loaded_at\nfrom products\n\nwhere loaded_at >= (select max(loaded_at) from analytics.rms.products)\nqualify row_number() over (partition by product_id order by loaded_at desc) = 1", "relation_name": "analytics.rms.products", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.478285Z", "completed_at": "2025-06-26T15:11:37.542284Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.576285Z", "completed_at": "2025-06-26T15:11:37.576285Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.11799979209899902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.fct_marketing__dim_customer", "compiled": true, "compiled_code": "def model(dbt, session):\r\n    session.use_schema(\"mrt_marketing\")\r\n    dbt.config(\r\n        python_version=\"3.11\",\r\n        packages=[\"faker\"],\r\n        materialization=\"incremental\",\r\n        incremental_strategy=\"merge\",\r\n        unique_key=\"account_id\"\r\n    )\r\n\r\n    from snowflake.snowpark import functions as F\r\n    from faker import Faker\r\n\r\n    fake = Faker()\r\n\r\n    @F.udf\r\n    def syn_first_name(col: str) -> str:\r\n        fake.seed_locale('en_US', col)\r\n        return fake.first_name()\r\n    \r\n    @F.udf\r\n    def syn_last_name(col: str) -> str:\r\n        fake.seed_locale('en_US', col)\r\n        return fake.last_name()\r\n\r\n\r\n    df = dbt.ref(\"stg_accounts_db__accounts\")\r\n    cols = df.columns\r\n\r\n    if dbt.is_incremental:\r\n            max_from_this = f\"select max(loaded_at) from {dbt.this}\"\r\n            df = df.filter(df[\"loaded_at\"] >= session.sql(max_from_this).collect()[0][0])\r\n\r\n    df_fn = (\r\n        df\r\n        .select(\"first_name\")\r\n        .distinct()\r\n        .with_column(\"syn_first_name\",\r\n                     F.lower(syn_first_name(F.col(\"first_name\"))))\r\n    )\r\n    \r\n    df_ln = (\r\n        df\r\n        .select(\"last_name\")\r\n        .distinct()\r\n        .with_column(\"syn_last_name\",\r\n                     F.lower(syn_last_name(F.col(\"last_name\"))))\r\n    )\r\n\r\n    df = (\r\n        df\r\n        .join(df_fn, \"first_name\")\r\n        .join(df_ln, \"last_name\")\r\n        .with_column(\"first_name\", df_fn[\"syn_first_name\"])\r\n        .with_column(\"last_name\", df_ln[\"syn_last_name\"])\r\n        .select(*cols)\r\n    )\r\n\r\n    return df\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"stg_accounts_db__accounts\": \"analytics.accounts_db.accounts\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"analytics\"\n    schema = \"mrt_common\"\n    identifier = \"dim_customer\"\n    \n    def __repr__(self):\n        return 'analytics.mrt_common.dim_customer'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "relation_name": "analytics.mrt_common.dim_customer", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.534285Z", "completed_at": "2025-06-26T15:11:37.587284Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.588285Z", "completed_at": "2025-06-26T15:11:37.588285Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.06099534034729004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_adobe_experience__clickstream_hits", "compiled": true, "compiled_code": "\n\nwith\n __dbt__cte__src_adobe_experience_web_clickstream_hits as (\n\n\nwith web_hits as (\n    select * from analytics.external.adobe_experience_web_clickstream_hits\n)\n\nselect\n    post_visid_high ::string    post_visid_high,\n    post_visid_low  ::string    post_visid_low,\n    hitid_high      ::string    hitid_high,\n    hitid_low       ::string    hitid_low,\n    date_time       ::timestamp date_time,\n    mcvisid         ::string    mcvisid,\n    page_url        ::string    page_url,\n    post_evar133    ::string    post_evar133,\n    transactionid   ::int       transactionid,\n    loaded_at       ::timestamp loaded_at\nfrom web_hits\n),  __dbt__cte__src_adobe_experience_app_clickstream_hits as (\n\n\nwith app_hits as (\n    select * from analytics.external.adobe_experience_app_clickstream_hits\n)\n\nselect\n    post_visid_high ::string    post_visid_high,\n    post_visid_low  ::string    post_visid_low,\n    hitid_high      ::string    hitid_high,\n    hitid_low       ::string    hitid_low,\n    date_time       ::timestamp date_time,\n    mcvisid         ::string    mcvisid,\n    page_url        ::string    page_url,\n    post_evar133    ::string    post_evar133,\n    transactionid   ::int       transactionid,\n    loaded_at       ::timestamp loaded_at\nfrom app_hits\n), web_hits as (\n    select 'web' property, * from __dbt__cte__src_adobe_experience_web_clickstream_hits\n),\n\napp_hits as (\n    select 'app' property, * from __dbt__cte__src_adobe_experience_app_clickstream_hits\n),\n\naccounts as (\n    select * from analytics.accounts_db.accounts\n),\n\nunited_hits as (\nselect 'web' property, * from web_hits\nwhere loaded_at >= (select max(loaded_at) from analytics.adobe_experience.clickstream_hits where property = 'web')\n\nunion all\n\nselect 'app' property, * from app_hits\nwhere loaded_at >= (select max(loaded_at) from analytics.adobe_experience.clickstream_hits where property = 'app')\n),\n\nconformed_hits as (\n    select\n        (convert_timezone('America/Vancouver', 'UTC', date_time))                   hit_at,\n        concat_ws(':', post_visid_high, post_visid_low) visit_id,\n        concat_ws(':', visit_id, hitid_high, hitid_low) hit_id,\n        mcvisid                                         visitor_id,\n        page_url                                        hit_url,\n        post_evar133                                    account_id,\n        transactionid                                   order_id,\n        loaded_at                                       loaded_at\n    from united_hits\n)\n\nselect\n    h.* exclude(loaded_at),\n    c.individual_party_key,\n    h.loaded_at\nfrom conformed_hits h\nleft join accounts c on h.account_id = c.account_id\nqualify row_number() over (partition by hit_id order by h.loaded_at desc) = 1", "relation_name": "analytics.adobe_experience.clickstream_hits", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.596284Z", "completed_at": "2025-06-26T15:11:37.623284Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.624284Z", "completed_at": "2025-06-26T15:11:37.624284Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031000375747680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__attributions", "compiled": true, "compiled_code": "\n\nwith\nclickstream_hits as (\n    select * from analytics.adobe_experience.clickstream_hits\n),\n\nindividual_party_key as (\n    select * from analytics.reltio.individual_party_keys\n),\n\nsplit_query_string as (\n    select\n        h.hit_id,\n        h.individual_party_key,\n        h.hit_at,\n        split(h.hit_url, '?')[1] query_string,\n        h.loaded_at\n    from clickstream_hits h\n),\n\nparsed as (\n    select distinct\n        hit_id,\n        individual_party_key,\n        hit_at attribution_start_at,\n        regexp_substr(query_string, 'utm_source=([^&]*)', 1, 1, 'e', 1) marketing_channel,\n        regexp_substr(query_string, 'utm_campaign=([^&]*)', 1, 1, 'e', 1) campaign_id,\n        regexp_substr(query_string, 'product_id=([^&]*)', 1, 1, 'e', 1) advertised_product_id, \n        loaded_at\n    from split_query_string\n)\n\nselect\n    (sha2(concat_ws(':', nvl(campaign_id:: string, ''), nvl(marketing_channel:: string, '')),256)) campaign_sid,\n    *\nfrom parsed\nwhere campaign_id is not null\nand loaded_at >= (select max(loaded_at) from analytics.int_marketing.attributions)", "relation_name": "analytics.int_marketing.attributions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.612284Z", "completed_at": "2025-06-26T15:11:37.626286Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.628285Z", "completed_at": "2025-06-26T15:11:37.628285Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018001556396484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.dim_marketing__dim_campaigns", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__campaigns as (\n\n\nwith\nfacebook_ads as (\n    select * from analytics.facebook_ads.campaigns\n),\ngoogle_ads as (\n    select * from analytics.google_ads.campaigns\n),\n\nunited as (\n    select * from facebook_ads\n    union all\n    select * from google_ads\n)\n\nselect\n(sha2(concat_ws(':', nvl(campaign_id:: string, ''), nvl(marketing_channel:: string, '')),256)) campaign_sid,\n*\nfrom united\n), campaigns as (\n    select * from __dbt__cte__campaigns\n)\n\nselect\n    marketing_channel,\n    campaign_id,\n    campaign_name,\n    campaign_start_at,\n    loaded_at\nfrom campaigns", "relation_name": "analytics.mrt_marketing.dim_campaigns", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.656285Z", "completed_at": "2025-06-26T15:11:37.682286Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.687285Z", "completed_at": "2025-06-26T15:11:37.687285Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0540010929107666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__int_attribution_last_click_14d_same_brand", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    products as (\n            select * from analytics.rms.products\n        ),\n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        where t.loaded_at >= (select max(loaded_at) from analytics.int_marketing.int_attribution_last_click_14d_same_brand)\n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            14 lookback_window,\n            ['brand_name'] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '14 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        inner join products ap on a.advertised_product_id = ap.product_id\n            inner join products tp on t.product_id = tp.product_id\n        where true\n            and ap.brand_name = tp.brand_name\n                \n            and a.loaded_at >= (select max(loaded_at) - interval '14 days' from analytics.int_marketing.int_attribution_last_click_14d_same_brand)\n        \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": "analytics.int_marketing.int_attribution_last_click_14d_same_brand", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.648284Z", "completed_at": "2025-06-26T15:11:37.684285Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.690284Z", "completed_at": "2025-06-26T15:11:37.690284Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.05700063705444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__int_attribution_last_click_14d", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    \n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        where t.loaded_at >= (select max(loaded_at) from analytics.int_marketing.int_attribution_last_click_14d)\n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            14 lookback_window,\n            [] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '14 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        \n        where true\n            \n            and a.loaded_at >= (select max(loaded_at) - interval '14 days' from analytics.int_marketing.int_attribution_last_click_14d)\n        \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": "analytics.int_marketing.int_attribution_last_click_14d", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.670284Z", "completed_at": "2025-06-26T15:11:37.691286Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.695284Z", "completed_at": "2025-06-26T15:11:37.695284Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.057999610900878906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__int_attribution_last_click_14d_same_sku", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    products as (\n            select * from analytics.rms.products\n        ),\n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        where t.loaded_at >= (select max(loaded_at) from analytics.int_marketing.int_attribution_last_click_14d_same_sku)\n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            14 lookback_window,\n            ['product_id'] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '14 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        inner join products ap on a.advertised_product_id = ap.product_id\n            inner join products tp on t.product_id = tp.product_id\n        where true\n            and ap.product_id = tp.product_id\n                \n            and a.loaded_at >= (select max(loaded_at) - interval '14 days' from analytics.int_marketing.int_attribution_last_click_14d_same_sku)\n        \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": "analytics.int_marketing.int_attribution_last_click_14d_same_sku", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.711285Z", "completed_at": "2025-06-26T15:11:37.734284Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.736285Z", "completed_at": "2025-06-26T15:11:37.736285Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03799939155578613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__int_attribution_last_click_30d_same_brand", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    products as (\n            select * from analytics.rms.products\n        ),\n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        where t.loaded_at >= (select max(loaded_at) from analytics.int_marketing.int_attribution_last_click_30d_same_brand)\n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            30 lookback_window,\n            ['brand_name'] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '30 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        inner join products ap on a.advertised_product_id = ap.product_id\n            inner join products tp on t.product_id = tp.product_id\n        where true\n            and ap.brand_name = tp.brand_name\n                \n            and a.loaded_at >= (select max(loaded_at) - interval '30 days' from analytics.int_marketing.int_attribution_last_click_30d_same_brand)\n        \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": "analytics.int_marketing.int_attribution_last_click_30d_same_brand", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.703285Z", "completed_at": "2025-06-26T15:11:37.735287Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.738287Z", "completed_at": "2025-06-26T15:11:37.738287Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.041002511978149414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__int_attribution_last_click_30d", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    \n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        where t.loaded_at >= (select max(loaded_at) from analytics.int_marketing.int_attribution_last_click_30d)\n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            30 lookback_window,\n            [] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '30 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        \n        where true\n            \n            and a.loaded_at >= (select max(loaded_at) - interval '30 days' from analytics.int_marketing.int_attribution_last_click_30d)\n        \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": "analytics.int_marketing.int_attribution_last_click_30d", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.721285Z", "completed_at": "2025-06-26T15:11:37.740284Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.741284Z", "completed_at": "2025-06-26T15:11:37.741284Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.038996219635009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__int_attribution_last_click_30d_same_sku", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    products as (\n            select * from analytics.rms.products\n        ),\n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        where t.loaded_at >= (select max(loaded_at) from analytics.int_marketing.int_attribution_last_click_30d_same_sku)\n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            30 lookback_window,\n            ['product_id'] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '30 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        inner join products ap on a.advertised_product_id = ap.product_id\n            inner join products tp on t.product_id = tp.product_id\n        where true\n            and ap.product_id = tp.product_id\n                \n            and a.loaded_at >= (select max(loaded_at) - interval '30 days' from analytics.int_marketing.int_attribution_last_click_30d_same_sku)\n        \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": "analytics.int_marketing.int_attribution_last_click_30d_same_sku", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.745283Z", "completed_at": "2025-06-26T15:11:37.756285Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:37.758283Z", "completed_at": "2025-06-26T15:11:37.758283Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0149993896484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.fct_marketing__fct_attribution", "compiled": true, "compiled_code": "select *\nfrom analytics.int_marketing.int_attribution_last_click_30d\nunion all\nselect *\nfrom analytics.int_marketing.int_attribution_last_click_30d_same_brand\nunion all\nselect *\nfrom analytics.int_marketing.int_attribution_last_click_30d_same_sku\nunion all\nselect *\nfrom analytics.int_marketing.int_attribution_last_click_14d\nunion all\nselect *\nfrom analytics.int_marketing.int_attribution_last_click_14d_same_brand\nunion all\nselect *\nfrom analytics.int_marketing.int_attribution_last_click_14d_same_sku", "relation_name": "analytics.mrt_marketing.fct_attribution", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-26T15:11:37.640284Z", "completed_at": "2025-06-26T15:11:38.468284Z"}, {"name": "execute", "started_at": "2025-06-26T15:11:38.469283Z", "completed_at": "2025-06-26T15:11:38.469283Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.8379991054534912, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.analytics.test", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    products as (\n            select * from analytics.rms.products\n        ),\n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        \n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            14 lookback_window,\n            ['brand_name', 'product_id'] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '14 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        inner join products ap on a.advertised_product_id = ap.product_id\n            inner join products tp on t.product_id = tp.product_id\n        where true\n            and ap.brand_name = tp.brand_name\n                and ap.product_id = tp.product_id\n                \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 3.8679957389831543, "args": {"partial_parse_file_diff": true, "use_colors": true, "warn_error_options": {"include": [], "exclude": []}, "use_colors_file": true, "printer_width": 80, "vars": {}, "invocation_command": "dbt docs generate", "send_anonymous_usage_stats": true, "log_level": "info", "show_resource_report": false, "defer": false, "skip_nodes_if_on_run_start_fails": false, "project_dir": "Z:\\Users\\Andrew\\Documents\\code\\dbt\\marketing", "state_modified_compare_more_unrendered_values": false, "require_yaml_configuration_for_mf_time_spines": false, "source_freshness_run_project_hooks": false, "populate_cache": true, "require_nested_cumulative_type_params": false, "log_file_max_bytes": 10485760, "strict_mode": false, "profiles_dir": "C:\\Users\\Andrew\\.dbt", "log_format": "default", "quiet": false, "empty_catalog": false, "require_resource_names_without_spaces": false, "partial_parse": true, "require_explicit_package_overrides_for_builtin_materializations": true, "introspect": true, "log_level_file": "debug", "log_path": "Z:\\Users\\Andrew\\Documents\\code\\dbt\\marketing\\logs", "version_check": true, "indirect_selection": "eager", "compile": true, "select": [], "write_json": true, "log_format_file": "debug", "static": false, "require_batched_execution_for_custom_microbatch_strategy": false, "exclude": [], "state_modified_compare_vars": false, "favor_state": false, "cache_selected_only": false, "static_parser": true, "macro_debugging": false, "which": "generate", "print": true}}