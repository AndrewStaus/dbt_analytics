{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.8", "generated_at": "2025-06-29T05:20:48.964855Z", "invocation_id": "7f163e27-3bad-4668-93c2-33e30bc72571", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.734619Z", "completed_at": "2025-06-29T05:20:47.773071Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:47.778073Z", "completed_at": "2025-06-29T05:20:47.778073Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.08175253868103027, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_csparc__transactions", "compiled": true, "compiled_code": "with orders as (\n    select * from raw.csparc.transactions\n),\n\nconformed as (\nselect\n    channel      ::string        sales_channel,\n    date_time    ::timestamp     transacted_at_pst,\n    party_key    ::string        individual_party_key,\n    order_id     ::int           transaction_id,\n    product_id   ::string        product_id,\n    revenue/100  ::decimal(12,2) revenue,\n    margin/100   ::decimal(12,2) margin,\n    loaded_at    ::timestamp     loaded_at\nfrom orders\n)\n\nselect\n    (convert_timezone('America/Vancouver', 'UTC', transacted_at_pst :: timestamp)) transacted_at,\n    * exclude(transacted_at_pst)\nfrom conformed\n\nwhere loaded_at >= (select max(loaded_at) from analytics.csparc.transactions)\nqualify row_number() over (partition by transaction_id order by loaded_at desc) = 1", "relation_name": "analytics.csparc.transactions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.759362Z", "completed_at": "2025-06-29T05:20:47.777071Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:47.779112Z", "completed_at": "2025-06-29T05:20:47.779112Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.08279085159301758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_facebook_ads__campaigns", "compiled": true, "compiled_code": "with campaigns as (\n    select * from raw.facebook_ads.campaigns\n)\n\nselect\n    data:id         ::int       campaign_id,\n    data:name       ::string    campaign_name,\n    data:start_date ::timestamp campaign_start_at,\n    loaded_at       ::timestamp loaded_at\nfrom campaigns\n\nwhere loaded_at >= (select max(loaded_at) from analytics.facebook_ads.campaigns)\nqualify row_number() over (partition by campaign_id order by loaded_at desc) = 1", "relation_name": "analytics.facebook_ads.campaigns", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.779112Z", "completed_at": "2025-06-29T05:20:47.810364Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:47.825991Z", "completed_at": "2025-06-29T05:20:47.825991Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.05191683769226074, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_google_ads__campaigns", "compiled": true, "compiled_code": "with campaigns as (\n    select * from raw.google_ads.campaigns\n)\n\nselect\n    data:id      ::int       campaign_id,\n    data:name    ::string    campaign_name,\n    data:start   ::timestamp campaign_start_at,\n    loaded_at    ::timestamp loaded_at\nfrom campaigns\n\nwhere loaded_at >= (select max(loaded_at) from analytics.google_ads.campaigns)\nqualify row_number() over (partition by campaign_id order by loaded_at desc) = 1", "relation_name": "analytics.google_ads.campaigns", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.794739Z", "completed_at": "2025-06-29T05:20:47.825991Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:47.825991Z", "completed_at": "2025-06-29T05:20:47.825991Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04687929153442383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_reltio__individual_party_keys", "compiled": true, "compiled_code": "with individual_party_keys as (\n    select * from raw.reltio.individual_party_keys\n)\n\nselect\n    party_key ::STRING    individual_party_key,\n    entity_id ::STRING    individual_entity_id,\n    loaded_at ::TIMESTAMP loaded_at\nfrom individual_party_keys\n\nwhere loaded_at >= (select max(loaded_at) from analytics.reltio.individual_party_keys)\nqualify row_number() over (partition by individual_party_key order by loaded_at desc) = 1", "relation_name": "analytics.reltio.individual_party_keys", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.810364Z", "completed_at": "2025-06-29T05:20:47.825991Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:47.841615Z", "completed_at": "2025-06-29T05:20:47.841615Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04687619209289551, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_reltio__individual_emails", "compiled": true, "compiled_code": "with  __dbt__cte__src_reltio_individual_emails as (\nwith individual_emails as (\n    select * from raw.reltio.individual_emails\n)\n\nselect\n    party_key ::STRING    individual_party_key,\n    source    ::STRING    source,\n    email     ::STRING    email,\n    loaded_at ::TIMESTAMP loaded_at\nfrom individual_emails\n), individual_emails as (\n    select * from __dbt__cte__src_reltio_individual_emails\n)\n\nselect\n    individual_party_key,\n    source,\n    (sha2(lower(trim(email :: string)), 256)) email,\n    loaded_at\nfrom individual_emails\n\nqualify row_number() over (partition by individual_party_key, email order by loaded_at desc) = 1", "relation_name": "analytics.reltio.individual_emails", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.794739Z", "completed_at": "2025-06-29T05:20:47.825991Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:47.841615Z", "completed_at": "2025-06-29T05:20:47.841615Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04687619209289551, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_rms__products", "compiled": true, "compiled_code": "with products as (\n    select * from raw.rms.products\n)\n\nselect\n    id        ::string    product_id,\n    name      ::string    product_name,\n    brand     ::string    brand_name,\n    loaded_at ::timestamp loaded_at\nfrom products\n\nwhere loaded_at >= (select max(loaded_at) from analytics.rms.products)\nqualify row_number() over (partition by product_id order by loaded_at desc) = 1", "relation_name": "analytics.rms.products", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.841615Z", "completed_at": "2025-06-29T05:20:47.888490Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:47.904114Z", "completed_at": "2025-06-29T05:20:47.904114Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.07812309265136719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_reltio__individual_emails_pii", "compiled": true, "compiled_code": "with  __dbt__cte__src_reltio_individual_emails as (\nwith individual_emails as (\n    select * from raw.reltio.individual_emails\n)\n\nselect\n    party_key ::STRING    individual_party_key,\n    source    ::STRING    source,\n    email     ::STRING    email,\n    loaded_at ::TIMESTAMP loaded_at\nfrom individual_emails\n), individual_emails as (\n    select * from __dbt__cte__src_reltio_individual_emails\n)\n\nselect\n    individual_party_key,\n    lower(trim(email :: string)) email,\n    loaded_at\nfrom individual_emails\nwhere loaded_at >= (select max(loaded_at) from analytics.reltio.individual_emails_pii)\nqualify row_number() over (partition by individual_party_key, email order by loaded_at desc) = 1", "relation_name": "analytics.reltio.individual_emails_pii", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.857244Z", "completed_at": "2025-06-29T05:20:47.904114Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:47.919742Z", "completed_at": "2025-06-29T05:20:47.919742Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.07812643051147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_accounts_db__accounts", "compiled": true, "compiled_code": "with  __dbt__cte__src_accounts_db_accounts as (\nwith accounts as (\n    select * from raw.accounts_db.accounts\n)\n\nselect\n    id         ::string    account_id,\n    party_key  ::string    individual_party_key,\n    first_name ::string    first_name,\n    last_name  ::string    last_name,\n    loaded_at  ::timestamp loaded_at\nfrom accounts\n), accounts as (\n    select * from __dbt__cte__src_accounts_db_accounts\n)\n\nselect\n    account_id,\n    individual_party_key,\n    (sha2(lower(trim(first_name :: string)), 256)) first_name,\n    (sha2(lower(trim(last_name :: string)), 256)) last_name,\n    loaded_at\nfrom accounts\n\nwhere loaded_at >= (select max(loaded_at) from analytics.accounts_db.accounts )\nqualify row_number() over (partition by account_id order by loaded_at desc) = 1", "relation_name": "analytics.accounts_db.accounts", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.888490Z", "completed_at": "2025-06-29T05:20:47.919742Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:47.919742Z", "completed_at": "2025-06-29T05:20:47.919742Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.062497854232788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_accounts_db__accounts_pii", "compiled": true, "compiled_code": "with  __dbt__cte__src_accounts_db_accounts as (\nwith accounts as (\n    select * from raw.accounts_db.accounts\n)\n\nselect\n    id         ::string    account_id,\n    party_key  ::string    individual_party_key,\n    first_name ::string    first_name,\n    last_name  ::string    last_name,\n    loaded_at  ::timestamp loaded_at\nfrom accounts\n), accounts as (\n    select * from __dbt__cte__src_accounts_db_accounts\n)\n\nselect\n    account_id,\n    lower(trim(first_name :: string)) first_name,\n    lower(trim(last_name :: string)) last_name,\n    loaded_at\nfrom accounts\n\nwhere loaded_at >= (select max(loaded_at) from analytics.accounts_db.accounts_pii )\nqualify row_number() over (partition by account_id order by loaded_at desc) = 1", "relation_name": "analytics.accounts_db.accounts_pii", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.904114Z", "completed_at": "2025-06-29T05:20:47.935366Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:47.982240Z", "completed_at": "2025-06-29T05:20:47.982240Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.1093747615814209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.dim_marketing__dim_campaigns", "compiled": true, "compiled_code": "with\nfacebook_ads as (\n    select * from analytics.facebook_ads.campaigns\n),\ngoogle_ads as (\n    select * from analytics.google_ads.campaigns\n),\n\nunited as (\n    select\n    'facebook_ads' marketing_channel,\n    *\n    from facebook_ads\n\n    union all\n\n    select\n    'google_ads' marketing_channel,\n    *\n    from google_ads\n)\n\nselect\nmd5(cast(coalesce(cast(marketing_channel as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(campaign_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) campaign_sid,\n*\nfrom united\n\nwhere loaded_at >= (select max(loaded_at) from analytics.mrt_marketing.dim_campaigns)", "relation_name": "analytics.mrt_marketing.dim_campaigns", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.935366Z", "completed_at": "2025-06-29T05:20:47.997865Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:47.997865Z", "completed_at": "2025-06-29T05:20:47.997865Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.07812309265136719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.dim_common__dim_customer", "compiled": true, "compiled_code": "def model(dbt, session):\r\n    session.use_schema(\"mrt_marketing\")\r\n    dbt.config(\r\n        python_version=\"3.11\",\r\n        tags=[\"account_id\"],\r\n        packages=[\"faker\"],\r\n        materialization=\"incremental\",\r\n        incremental_strategy=\"merge\",\r\n        unique_key=\"account_id\"\r\n    )\r\n\r\n    from snowflake.snowpark import functions as F\r\n    from faker import Faker\r\n\r\n    fake = Faker()\r\n\r\n    @F.udf\r\n    def syn_first_name(col: str) -> str:\r\n        fake.seed_locale('en_US', col)\r\n        return fake.first_name()\r\n    \r\n    @F.udf\r\n    def syn_last_name(col: str) -> str:\r\n        fake.seed_locale('en_US', col)\r\n        return fake.last_name()\r\n\r\n\r\n    df = dbt.ref(\"stg_accounts_db__accounts\")\r\n    cols = df.columns\r\n\r\n    if dbt.is_incremental:\r\n            max_from_this = f\"select max(loaded_at) from {dbt.this}\"\r\n            df = df.filter(df[\"loaded_at\"] >= session.sql(max_from_this).collect()[0][0])\r\n\r\n    df_fn = (\r\n        df\r\n        .select(\"first_name\")\r\n        .distinct()\r\n        .with_column(\"syn_first_name\",\r\n                     F.lower(syn_first_name(F.col(\"first_name\"))))\r\n    )\r\n    \r\n    df_ln = (\r\n        df\r\n        .select(\"last_name\")\r\n        .distinct()\r\n        .with_column(\"syn_last_name\",\r\n                     F.lower(syn_last_name(F.col(\"last_name\"))))\r\n    )\r\n\r\n    df = (\r\n        df\r\n        .join(df_fn, \"first_name\")\r\n        .join(df_ln, \"last_name\")\r\n        .with_column(\"first_name\", df_fn[\"syn_first_name\"])\r\n        .with_column(\"last_name\", df_ln[\"syn_last_name\"])\r\n        .select(*cols)\r\n    )\r\n\r\n    return df\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"stg_accounts_db__accounts\": \"analytics.accounts_db.accounts\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"analytics\"\n    schema = \"mrt_common\"\n    identifier = \"dim_customer\"\n    \n    def __repr__(self):\n        return 'analytics.mrt_common.dim_customer'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "relation_name": "analytics.mrt_common.dim_customer", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.982240Z", "completed_at": "2025-06-29T05:20:47.997865Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.013490Z", "completed_at": "2025-06-29T05:20:48.013490Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09374880790710449, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.stg_adobe_experience__clickstream_hits", "compiled": true, "compiled_code": "with app_hits as (\n    select * from raw.adobe_experience_app.clickstream_hits\n),\n\nweb_hits as (\n    select * from raw.adobe_experience_web.clickstream_hits\n),\n\naccounts as (\n    select * from analytics.accounts_db.accounts\n),\n\nunited_hits as (\n    select 'app' property, * from app_hits\n    where loaded_at >= (select max(loaded_at) from analytics.adobe_experience.clickstream_hits where property = 'web')\n\n    union all\n\n    select 'web' property, * from web_hits\n    where loaded_at >= (select max(loaded_at) from analytics.adobe_experience.clickstream_hits where property = 'web')\n),\n\nconformed_hits as (\n    select\n        property                                        ::string    property,\n        concat_ws(':', post_visid_high, post_visid_low) ::string    visit_id,\n        concat_ws(':', visit_id, hitid_high, hitid_low) ::string    hit_id,\n        mcvisid                                         ::string    visitor_id,\n        page_url                                        ::string    hit_url,\n        post_evar133                                    ::string    account_id,\n        transactionid                                   ::int       order_id,\n        (convert_timezone('America/Vancouver', 'UTC', date_time :: timestamp))                   ::timestamp hit_at,\n        loaded_at                                       ::timestamp loaded_at\n    from united_hits\n)\n\nselect\n    h.*,\n    a.individual_party_key\nfrom conformed_hits h\nleft join accounts a on h.account_id = a.account_id", "relation_name": "analytics.adobe_experience.clickstream_hits", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:47.997865Z", "completed_at": "2025-06-29T05:20:48.037767Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.046046Z", "completed_at": "2025-06-29T05:20:48.046046Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04818081855773926, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.accepted_values_dim_marketing__dim_campaigns_marketing_channel__facebook_ads__google_ads.751e891354", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        marketing_channel as value_field,\n        count(*) as n_records\n\n    from analytics.mrt_marketing.dim_campaigns\n    group by marketing_channel\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'facebook_ads','google_ads'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.013490Z", "completed_at": "2025-06-29T05:20:48.062065Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.074065Z", "completed_at": "2025-06-29T05:20:48.075065Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.07720065116882324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.not_null_dim_marketing__dim_campaigns_campaign_id.cbafe1cca1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom analytics.mrt_marketing.dim_campaigns\nwhere campaign_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.050047Z", "completed_at": "2025-06-29T05:20:48.079106Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.079106Z", "completed_at": "2025-06-29T05:20:48.079106Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04133939743041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.unique_dim_marketing__dim_campaigns_campaign_id.8eb08d7dd6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    campaign_id as unique_field,\n    count(*) as n_records\n\nfrom analytics.mrt_marketing.dim_campaigns\nwhere campaign_id is not null\ngroup by campaign_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.062065Z", "completed_at": "2025-06-29T05:20:48.079106Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.094735Z", "completed_at": "2025-06-29T05:20:48.094735Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04968404769897461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.not_null_dim_common__dim_customer_account_id.7bc8bd4846", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom analytics.mrt_common.dim_customer\nwhere account_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.079106Z", "completed_at": "2025-06-29T05:20:48.094735Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.094735Z", "completed_at": "2025-06-29T05:20:48.094735Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02066946029663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.not_null_dim_common__dim_customer_first_name.1a840ae14f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect first_name\nfrom analytics.mrt_common.dim_customer\nwhere first_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.079106Z", "completed_at": "2025-06-29T05:20:48.110360Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.110360Z", "completed_at": "2025-06-29T05:20:48.110360Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03125429153442383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.not_null_dim_common__dim_customer_last_name.9ccea6326f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_name\nfrom analytics.mrt_common.dim_customer\nwhere last_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.110360Z", "completed_at": "2025-06-29T05:20:48.141608Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.141608Z", "completed_at": "2025-06-29T05:20:48.141608Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04687356948852539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.not_null_dim_common__dim_customer_loaded_at.50dc1f281b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect loaded_at\nfrom analytics.mrt_common.dim_customer\nwhere loaded_at is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.125983Z", "completed_at": "2025-06-29T05:20:48.141608Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.157233Z", "completed_at": "2025-06-29T05:20:48.157233Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04687237739562988, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.not_null_dim_common__dim_customer_party_key.1532b91762", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect party_key\nfrom analytics.mrt_common.dim_customer\nwhere party_key is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.125983Z", "completed_at": "2025-06-29T05:20:48.157233Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.157233Z", "completed_at": "2025-06-29T05:20:48.157233Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04687237739562988, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.unique_dim_common__dim_customer_account_id.4c0f18732c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    account_id as unique_field,\n    count(*) as n_records\n\nfrom analytics.mrt_common.dim_customer\nwhere account_id is not null\ngroup by account_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.141608Z", "completed_at": "2025-06-29T05:20:48.157233Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.157233Z", "completed_at": "2025-06-29T05:20:48.157233Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031249523162841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__attributions", "compiled": true, "compiled_code": "with\nclickstream_hits as (\n    select * from analytics.adobe_experience.clickstream_hits\n),\n\nindividual_party_key as (\n    select * from analytics.reltio.individual_party_keys\n),\n\nsplit_query_string as (\n    select\n        h.hit_id,\n        h.individual_party_key,\n        h.hit_at,\n        split(h.hit_url, '?')[1] query_string,\n        h.loaded_at\n    from clickstream_hits h\n),\n\nparsed as (\n    select distinct\n        hit_id,\n        individual_party_key,\n        hit_at attribution_start_at,\n        regexp_substr(query_string, 'utm_source=([^&]*)', 1, 1, 'e', 1) marketing_channel,\n        regexp_substr(query_string, 'utm_campaign=([^&]*)', 1, 1, 'e', 1) campaign_id,\n        regexp_substr(query_string, 'product_id=([^&]*)', 1, 1, 'e', 1) advertised_product_id, \n        loaded_at\n    from split_query_string\n)\n\nselect\n    (sha2(concat_ws(':', nvl(campaign_id:: string, ''), nvl(marketing_channel:: string, '')),256)) campaign_sid,\n    *\nfrom parsed\nwhere campaign_id is not null\nand loaded_at >= (select max(loaded_at) from analytics.int_marketing.attributions)", "relation_name": "analytics.int_marketing.attributions", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.172860Z", "completed_at": "2025-06-29T05:20:48.213774Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.214774Z", "completed_at": "2025-06-29T05:20:48.215776Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.05854320526123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__int_attribution_last_click_14d", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    \n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        where t.loaded_at >= (select max(loaded_at) from analytics.int_marketing.int_attribution_last_click_14d)\n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            14 lookback_window,\n            [] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '14 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        \n        where true\n            \n            and a.loaded_at >= (select max(loaded_at) - interval '14 days' from analytics.int_marketing.int_attribution_last_click_14d)\n        \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": "analytics.int_marketing.int_attribution_last_click_14d", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.188484Z", "completed_at": "2025-06-29T05:20:48.228396Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.228396Z", "completed_at": "2025-06-29T05:20:48.228396Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.055535316467285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__int_attribution_last_click_14d_same_sku", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    products as (\n            select * from analytics.rms.products\n        ),\n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        where t.loaded_at >= (select max(loaded_at) from analytics.int_marketing.int_attribution_last_click_14d_same_sku)\n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            14 lookback_window,\n            ['product_id'] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '14 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        inner join products ap on a.advertised_product_id = ap.product_id\n            inner join products tp on t.product_id = tp.product_id\n        where true\n            and ap.product_id = tp.product_id\n                \n            and a.loaded_at >= (select max(loaded_at) - interval '14 days' from analytics.int_marketing.int_attribution_last_click_14d_same_sku)\n        \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": "analytics.int_marketing.int_attribution_last_click_14d_same_sku", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.205142Z", "completed_at": "2025-06-29T05:20:48.228396Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.228396Z", "completed_at": "2025-06-29T05:20:48.228396Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.055535316467285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__int_attribution_last_click_30d", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    \n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        where t.loaded_at >= (select max(loaded_at) from analytics.int_marketing.int_attribution_last_click_30d)\n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            30 lookback_window,\n            [] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '30 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        \n        where true\n            \n            and a.loaded_at >= (select max(loaded_at) - interval '30 days' from analytics.int_marketing.int_attribution_last_click_30d)\n        \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": "analytics.int_marketing.int_attribution_last_click_30d", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.188484Z", "completed_at": "2025-06-29T05:20:48.228396Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.228396Z", "completed_at": "2025-06-29T05:20:48.228396Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.055535316467285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__int_attribution_last_click_14d_same_brand", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    products as (\n            select * from analytics.rms.products\n        ),\n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        where t.loaded_at >= (select max(loaded_at) from analytics.int_marketing.int_attribution_last_click_14d_same_brand)\n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            14 lookback_window,\n            ['brand_name'] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '14 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        inner join products ap on a.advertised_product_id = ap.product_id\n            inner join products tp on t.product_id = tp.product_id\n        where true\n            and ap.brand_name = tp.brand_name\n                \n            and a.loaded_at >= (select max(loaded_at) - interval '14 days' from analytics.int_marketing.int_attribution_last_click_14d_same_brand)\n        \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": "analytics.int_marketing.int_attribution_last_click_14d_same_brand", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.220774Z", "completed_at": "2025-06-29T05:20:48.228396Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.244028Z", "completed_at": "2025-06-29T05:20:48.244028Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.026254653930664062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__int_attribution_last_click_30d_same_brand", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    products as (\n            select * from analytics.rms.products\n        ),\n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        where t.loaded_at >= (select max(loaded_at) from analytics.int_marketing.int_attribution_last_click_30d_same_brand)\n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            30 lookback_window,\n            ['brand_name'] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '30 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        inner join products ap on a.advertised_product_id = ap.product_id\n            inner join products tp on t.product_id = tp.product_id\n        where true\n            and ap.brand_name = tp.brand_name\n                \n            and a.loaded_at >= (select max(loaded_at) - interval '30 days' from analytics.int_marketing.int_attribution_last_click_30d_same_brand)\n        \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": "analytics.int_marketing.int_attribution_last_click_30d_same_brand", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.244028Z", "completed_at": "2025-06-29T05:20:48.244028Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.244028Z", "completed_at": "2025-06-29T05:20:48.244028Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015633106231689453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.int_marketing__int_attribution_last_click_30d_same_sku", "compiled": true, "compiled_code": "with\n    attribution as (\n        select * from analytics.int_marketing.attributions\n    ),\n    transactions as (\n        select * from analytics.csparc.transactions\n    ),\n    individual_party_keys as (\n        select * from analytics.reltio.individual_party_keys\n    ),\n    products as (\n            select * from analytics.rms.products\n        ),\n\n    transactions_with_entity as (\n        select\n            t.transaction_id,\n            t.product_id,\n            t.sales_channel,\n            t.transacted_at,\n            t.individual_party_key,\n            i.individual_entity_id,\n            t.loaded_at\n        from transactions t\n        inner join individual_party_keys i on t.individual_party_key = i.individual_party_key\n        where t.loaded_at >= (select max(loaded_at) from analytics.int_marketing.int_attribution_last_click_30d_same_sku)\n    ),\n\n    attributed as (\n        select\n            (sha2(concat_ws(':', nvl(t.product_id:: string, ''), nvl(t.transacted_at:: string, ''), nvl(t.transaction_id:: string, '')),256)) attribution_sid,\n            30 lookback_window,\n            ['product_id'] criteria,\n            a.hit_id,\n            i.individual_entity_id,\n            a.campaign_sid,\n            t.transaction_id,\n            a.advertised_product_id,\n            t.product_id transacted_product_id,\n            t.sales_channel,\n            t.transacted_at,\n            a.attribution_start_at,\n            coalesce(\n                lag(a.attribution_start_at) over (\n                    partition by i.individual_entity_id\n                    order by a.attribution_start_at, a.hit_id\n                ),\n                a.attribution_start_at + interval '30 days'\n            ) attribution_end_at,\n            t.loaded_at\n        from attribution a\n        inner join individual_party_keys i on a.individual_party_key = i.individual_party_key\n        inner join transactions_with_entity t on true\n            and i.individual_entity_id = t.individual_entity_id\n            and t.transacted_at >= a.attribution_start_at\n        inner join products ap on a.advertised_product_id = ap.product_id\n            inner join products tp on t.product_id = tp.product_id\n        where true\n            and ap.product_id = tp.product_id\n                \n            and a.loaded_at >= (select max(loaded_at) - interval '30 days' from analytics.int_marketing.int_attribution_last_click_30d_same_sku)\n        \n        qualify t.transacted_at < attribution_end_at\n    )\n\n    select\n        *\n    from attributed\n    qualify 1 = row_number() over (partition by attribution_sid order by attribution_start_at desc)\n\n", "relation_name": "analytics.int_marketing.int_attribution_last_click_30d_same_sku", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.259650Z", "completed_at": "2025-06-29T05:20:48.259650Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.259650Z", "completed_at": "2025-06-29T05:20:48.259650Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015621662139892578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.analytics.fct_marketing__fct_attribution", "compiled": true, "compiled_code": "select *\nfrom analytics.int_marketing.int_attribution_last_click_30d\nunion all\nselect *\nfrom analytics.int_marketing.int_attribution_last_click_30d_same_brand\nunion all\nselect *\nfrom analytics.int_marketing.int_attribution_last_click_30d_same_sku\nunion all\nselect *\nfrom analytics.int_marketing.int_attribution_last_click_14d\nunion all\nselect *\nfrom analytics.int_marketing.int_attribution_last_click_14d_same_brand\nunion all\nselect *\nfrom analytics.int_marketing.int_attribution_last_click_14d_same_sku", "relation_name": "analytics.mrt_marketing.fct_attribution", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.275275Z", "completed_at": "2025-06-29T05:20:48.322148Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.322148Z", "completed_at": "2025-06-29T05:20:48.322148Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04687309265136719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.accepted_values_fct_marketing__fct_attribution_sales_channel__store__web.c52b93490f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        sales_channel as value_field,\n        count(*) as n_records\n\n    from analytics.mrt_marketing.fct_attribution\n    group by sales_channel\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'store','web'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.290899Z", "completed_at": "2025-06-29T05:20:48.322148Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.322148Z", "completed_at": "2025-06-29T05:20:48.322148Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04687309265136719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.relationships_fct_marketing__fct_attribution_campaign_sid__CAMPAIGN_SID__ref_dim_marketing__dim_campaigns_.b5edb5a4d2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select campaign_sid as from_field\n    from analytics.mrt_marketing.fct_attribution\n    where campaign_sid is not null\n),\n\nparent as (\n    select CAMPAIGN_SID as to_field\n    from analytics.mrt_marketing.dim_campaigns\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.290899Z", "completed_at": "2025-06-29T05:20:48.322148Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.322148Z", "completed_at": "2025-06-29T05:20:48.322148Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04687309265136719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.relationships_fct_marketing__fct_attribution_advertised_product_id__PRODUCT_ID__ref_stg_rms__products_.b80873d43f", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select advertised_product_id as from_field\n    from analytics.mrt_marketing.fct_attribution\n    where advertised_product_id is not null\n),\n\nparent as (\n    select PRODUCT_ID as to_field\n    from analytics.rms.products\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.306524Z", "completed_at": "2025-06-29T05:20:48.322148Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.322148Z", "completed_at": "2025-06-29T05:20:48.322148Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04687309265136719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.relationships_fct_marketing__fct_attribution_transacted_product_id__PRODUCT_ID__ref_stg_rms__products_.5f77e159b3", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select transacted_product_id as from_field\n    from analytics.mrt_marketing.fct_attribution\n    where transacted_product_id is not null\n),\n\nparent as (\n    select PRODUCT_ID as to_field\n    from analytics.rms.products\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-29T05:20:48.337774Z", "completed_at": "2025-06-29T05:20:48.351693Z"}, {"name": "execute", "started_at": "2025-06-29T05:20:48.352783Z", "completed_at": "2025-06-29T05:20:48.352783Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030635356903076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.analytics.relationships_fct_marketing__fct_attribution_transaction_id__TRANSACTION_ID__ref_stg_csparc__transactions_.beebef5e7e", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select transaction_id as from_field\n    from analytics.mrt_marketing.fct_attribution\n    where transaction_id is not null\n),\n\nparent as (\n    select TRANSACTION_ID as to_field\n    from analytics.csparc.transactions\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 2.6864354610443115, "args": {"send_anonymous_usage_stats": true, "log_file_max_bytes": 10485760, "indirect_selection": "eager", "log_format_file": "debug", "state_modified_compare_more_unrendered_values": false, "introspect": true, "strict_mode": false, "static": false, "log_level_file": "debug", "log_path": "Z:\\Users\\Andrew\\Documents\\code\\dbt\\marketing\\logs", "require_batched_execution_for_custom_microbatch_strategy": false, "warn_error_options": {"include": [], "exclude": []}, "write_json": true, "which": "generate", "source_freshness_run_project_hooks": false, "state_modified_compare_vars": false, "require_explicit_package_overrides_for_builtin_materializations": true, "populate_cache": true, "require_resource_names_without_spaces": false, "require_yaml_configuration_for_mf_time_spines": false, "static_parser": true, "cache_selected_only": false, "partial_parse": true, "quiet": false, "log_format": "default", "version_check": true, "printer_width": 80, "compile": true, "show_resource_report": false, "profiles_dir": "C:\\Users\\Andrew\\.dbt", "empty_catalog": false, "select": [], "favor_state": false, "vars": {}, "print": true, "log_level": "info", "partial_parse_file_diff": true, "exclude": [], "project_dir": "Z:\\Users\\Andrew\\Documents\\code\\dbt\\marketing", "use_colors_file": true, "invocation_command": "dbt docs generate", "require_nested_cumulative_type_params": false, "defer": false, "use_colors": true, "skip_nodes_if_on_run_start_fails": false, "macro_debugging": false}}